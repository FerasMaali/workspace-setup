---

- hosts: all
  connection: local
  become: yes

  vars:
    username: "feras"
    home_dir: "/home/{{ username }}"

  roles:
    - role: andrewrothstein.kubectl
      tags:
      - work
      - kubectl
      - cp

    - role: nickjj.docker
      tags: work

    - role: andrewrothstein.minikube
      tags: work

    - role: geerlingguy.java
      tags:
      - work
      - cp

    - role: andrewrothstein.skaffold
      tags: work

  tasks:
  - name: Format Ansible output
    lineinfile:
      path: /etc/ansible/ansible.cfg
      regexp: "{{ item.regexp_val }}"
      line: "{{ item.line_val }}"
      insertafter: "^\\[defaults\\]$"
    loop:
      - {regexp_val: '.*stdout_callback = .*', line_val: 'stdout_callback = yaml'}
      - {regexp_val: '.*bin_ansible_callbacks = .*', line_val: 'bin_ansible_callbacks = True'}
    tags:
    - system

  - name: Update & Upgrade system
    apt:
      update_cache: yes
      upgrade: full
    tags:
    - system

  - name: Install required packages
    apt:
      update_cache: yes
      pkg:
      - git
      - vim
      - python3
      - python3-venv
      - python3-dev
      - curl
      - zsh
      - qemu
      - qemu-kvm
      - bridge-utils
      - virt-manager
      - tree
      - zip
      - unzip
      - jq
      - golang
      - nodejs
      - npm
      - cmake
      - mono-complete
      - gdb
      - clang-format
      - nmap
    tags:
    - system

  - name: Get Amix vimrc
    git:
      repo: https://github.com/amix/vimrc.git
      dest: "{{ home_dir }}/.vim_runtime"
      depth: 1
      version: master
    become: yes
    become_user: "{{ username }}"
    register: getting_amix_result
    tags:
    - system

  - name: Install Amix vimrc
    shell : "sh ~/.vim_runtime/install_awesome_vimrc.sh"
    become: yes
    become_user: "{{ username }}"
    when: getting_amix_result.changed
    tags:
    - system

  - name: Create ~/.vim_runtime/my_plugins
    file:
      path: ~/.vim_runtime/my_plugins
      state: directory
    become: yes
    become_user: "{{ username }}"
    tags:
    - system

  - name: Add additional vim plugins
    git:
      repo: "{{ item.repo }}"
      dest: "{{ home_dir }}/.vim_runtime/my_plugins/{{ item.dest }}"
      version: master
    loop:
      - { repo: "https://github.com/ekalinin/dockerfile.vim", dest: "Dockerfile" }
      - { repo: "https://github.com/sheerun/vim-polyglot", dest: "vim-polyglot" }
      - { repo: "https://github.com/ycm-core/YouCompleteMe", dest: "YouCompleteMe" }
      - { repo: "https://github.com/google/vim-maktaba", dest: "maktaba" }
      - { repo: "https://github.com/google/vim-codefmt", dest: "codefmt" }
      - { repo: "https://github.com/google/vim-glaive", dest: "glaive" }
    become: yes
    become_user: "{{ username }}"
    tags:
    - system

  - name: Add my_configs.vim to amix/vimrc configs
    get_url:
      url: https://gist.githubusercontent.com/FerasMaali/c8f6db47cd2a91d01653dbf7691fc404/raw/my_configs.vim
      dest: "{{ home_dir }}/.vim_runtime/my_configs.vim"
      mode: "666"
    become: yes
    become_user: "{{ username }}"
    tags:
    - system

  - name: Get zsh directory
    command: "which zsh"
    register: zsh_dir
    changed_when: False
    tags:
    - system

  - name: Set zsh as default shell
    user:
      name: "{{ username }}"
      shell: "{{ zsh_dir.stdout }}"
    tags:
    - system

  - name: Find if Oh-My-Zsh is already installed
    stat:
      path: "{{ home_dir }}/.oh-my-zsh"
    register: oh_my_zsh_dir_info
    tags:
    - system

  - name: Install Oh-My-Zsh
    shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
    become: yes
    become_user: "{{ username }}"
    when: not oh_my_zsh_dir_info.stat.exists
    tags:
    - system

  - name: Set zsh theme
    lineinfile:
      path: "{{ home_dir }}/.zshrc"
      regexp: ".*ZSH_THEME=.*"
      line: "ZSH_THEME=\"flazz\""
    tags:
    - system

  - name: Enable zsh plugins
    lineinfile:
      path: "{{ home_dir }}/.zshrc"
      regexp: ".*plugins=.*"
      line: "plugins=(git docker-compose docker vagrant aws kubectl minikube pip)"
    tags:
    - system

  - name: Get .gitconfig
    get_url:
      url: https://gist.githubusercontent.com/FerasMaali/0938b4177c5790fcd389da0829a69b8d/raw/.gitconfig
      dest: "{{ home_dir }}/.gitconfig"
    become: yes
    become_user: "{{ username }}"
    tags:
    - system

  - name: Install YCM
    command:
      chdir: "{{ home_dir }}/.vim_runtime/my_plugins/YouCompleteMe"
      cmd: python3 install.py --all
    tags:
      - never

  - name: Check if cht.sh is installed
    command: which cht.sh
    failed_when: false
    changed_when: false
    register: cht_sh_path
    tags:
      - system

  - name: Install cht.sh
    command: |
      curl https://cht.sh/:cht.sh | sudo tee /usr/local/bin/cht.sh > /dev/null
      chmod +x /usr/local/bin/cht.sh
    become: yes
    become_user: root
    tags:
      - system
    when: "{{ cht_sh_path.rc != 0 }}"


---

- hosts: all
  connection: local
  become: yes

  vars:
    username: "vagrant"
    home_dir: "/home/{{ username }}"

  roles:
    - andrewrothstein.kubectl
    - nickjj.docker
    - andrewrothstein.minikube
    - geerlingguy.java
    - andrewrothstein.skaffold

  tasks:
  - name: Format Ansible output
    lineinfile:
      path: /etc/ansible/ansible.cfg
      regexp: "{{ item.regexp_val }}"
      line: "{{ item.line_val }}"
      insertafter: "^\\[defaults\\]$"
    loop:
      - {regexp_val: '.*stdout_callback = .*', line_val: 'stdout_callback = yaml'}
      - {regexp_val: '.*bin_ansible_callbacks = .*', line_val: 'bin_ansible_callbacks = True'}

  - name: Update & Upgrade system
    apt:
      update_cache: yes
      upgrade: full

  - name: Install required packages
    apt:
      update_cache: yes
      pkg:
      - git
      - vim
      - python3
      - curl
      - zsh
      - qemu
      - qemu-kvm
      - libvirt-bin
      - bridge-utils
      - virt-manager
      - tree
      - zip
      - unzip

  - name: Get Amix vimrc
    git:
      repo: https://github.com/amix/vimrc.git
      dest: "{{ home_dir }}/.vim_runtime"
      depth: 1
      version: master
    become: yes
    become_user: "{{ username }}"
    register: getting_amix_result

  - name: Install Amix vimrc
    shell : "sh ~/.vim_runtime/install_awesome_vimrc.sh"
    become: yes
    become_user: "{{ username }}"
    when: getting_amix_result.changed

  - name: Create ~/.vim_runtime/my_plugins
    file:
      path: ~/.vim_runtime/my_plugins
      state: directory
    become: yes
    become_user: "{{ username }}"

  - name: Add additional vim plugins
    git:
      repo: "{{ item.repo }}"
      dest: "{{ home_dir }}/.vim_runtime/my_plugins/{{ item.dest }}"
      version: master
    loop:
      - { repo: "https://github.com/ekalinin/dockerfile.vim", dest: "Dockerfile" }
      - { repo: "https://github.com/pearofducks/ansible-vim", dest: "Ansible" }
    become: yes
    become_user: "{{ username }}"

  - name: Add my_configs.vim to amix/vimrc configs
    get_url:
      url: https://gist.githubusercontent.com/FerasMaali/c8f6db47cd2a91d01653dbf7691fc404/raw/my_configs.vim
      dest: "{{ home_dir }}/.vim_runtime/my_configs.vim"
      mode: "666"
    become: yes
    become_user: "{{ username }}"

  - name: Get zsh directory
    command: "which zsh"
    register: zsh_dir
    changed_when: False

  - name: Set zsh as default shell
    user:
      name: "{{ username }}"
      shell: "{{ zsh_dir.stdout }}"

  - name: Find if Oh-My-Zsh is already installed
    stat:
      path: "{{ home_dir }}/.oh-my-zsh"
    register: oh_my_zsh_dir_info

  - name: Install Oh-My-Zsh
    shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
    become: yes
    become_user: "{{ username }}"
    when: not oh_my_zsh_dir_info.stat.exists

  - name: Set zsh theme
    lineinfile:
      path: "{{ home_dir }}/.zshrc"
      regexp: ".*ZSH_THEME=.*"
      line: "ZSH_THEME=\"flazz\""

  - name: Enable zsh plugins
    lineinfile:
      path: "{{ home_dir }}/.zshrc"
      regexp: ".*plugins=.*"
      line: "plugins=(git docker-compose docker vagrant aws kubectl minikube pip)"

  - name: Start and enable libvirtd
    systemd:
      name: libvirtd
      state: started
      enabled: yes

  - name: Make sure tmux starts automatically
    blockinfile:
      path: "{{ home_dir }}/.zshrc"
      block: |
        if command -v tmux &> /dev/null && [ -n "$PS1" ] && [[ ! "$TERM" =~ screen ]] && [[ ! "$TERM" =~ tmux ]] && [ -z "$TMUX" ]; then
          exec tmux
        fi

  - name: Get some decent tmux.conf file
    get_url:
      url: https://gist.githubusercontent.com/FerasMaali/7344406acbd30a7beb274a841e766733/raw/tmux.conf
      dest: "{{ home_dir }}/.tmux.conf"
    become: yes
    become_user: "{{ username }}"

  - name: Get .gitconfig
    get_url:
      url: https://gist.githubusercontent.com/FerasMaali/0938b4177c5790fcd389da0829a69b8d/raw/.gitconfig
      dest: "{{ home_dir }}/.gitconfig"
    become: yes
    become_user: "{{ username }}"

